<?php declare(strict_types=1);

namespace EasyWsdl\ToPHP\Tests\ToPHP;

use EasyWsdl\ToPHP\Generator;
use EasyWsdl\ToPHP\Options\GeneratorOptions;
use EasyWsdl\ToPHP\Options\SoapOptions;
use EasyWsdl\ToPHP\Options\WsdlOptions;
use EasyWsdl\ToPHP\Tests\Fixtures\BaseTestCase;
use Tester\Assert;


require_once __DIR__ . '/../bootstrap.php';

class GeneratorTest extends BaseTestCase
{
    public function testSoapOptions(): void
    {
        $soapOptions = new SoapOptions;
        $soapOptions->addOption(SoapOptions::LOCATION, 'localhost');
        Assert::same('localhost', $soapOptions->getOption(SoapOptions::LOCATION));
        $soapOptions->setOptions([SoapOptions::LOGIN => 'user', SoapOptions::PASSWORD => 'password']);
        Assert::count(3, $soapOptions->getOptions());
    }

    public function testWsdlOptions(): void
    {
        $wsdlOptions = new WsdlOptions;
        $wsdlOptions->setWsdl('..\Fixtures\test.xml');
        $wsdlOptions->setSoapClientName('Autogenerated');
        Assert::type(WsdlOptions::class, $wsdlOptions);
        $soapOptions = new SoapOptions;
        $soapOptions->addOption(SoapOptions::LOCATION, 'localhost');
        $wsdlOptions->setOptions($soapOptions);
        Assert::type(SoapOptions::class, $wsdlOptions->getOptions());
    }

    public function testGeneratorOptionsWithOneWsdlOption(): void
    {
        $wsdlOptions = new WsdlOptions;
        $wsdlOptions->setWsdl('..\Fixtures\test.xml');
        $wsdlOptions->setSoapClientName('Autogenerated');

        $genOptions = new GeneratorOptions;
        $genOptions->setTypesFolderName('Nevim');
        $genOptions->setCentralizedNamespace('TestNamespace');
        $genOptions->addWsdl($wsdlOptions);

        $service = new Generator;
        $service->generate($genOptions);
    }

    public function testWithNamespaceAndClassName(): void
    {

        $wsdlOptions = new WsdlOptions;
        $wsdlOptions->setWsdl('..\Fixtures\test.xml');
        $wsdlOptions->setSoapClientName('Autogenerated');

        $wsdlOptions2 = new WsdlOptions;
        $wsdlOptions2->setWsdl('..\Fixtures\testReplacedProperties.xml');
        $wsdlOptions2->setSoapClientName('SecondClient');

        $wsdlOptions3 = new WsdlOptions;
        $wsdlOptions3->setWsdl('https://svn.apache.org/repos/asf/airavata/sandbox/xbaya-web/test/Calculator.wsdl');
        $wsdlOptions3->setSoapClientName('Calculator');

        $genOptions = new GeneratorOptions;
        $genOptions->setTypesFolderName('Types');
        $genOptions->setCentralizedNamespace('theStormwinter\EasyWsdl2Php\Soap');
        $genOptions->addWsdl($wsdlOptions);
        $genOptions->addWsdl($wsdlOptions2);
        $genOptions->addWsdl($wsdlOptions3);

        $service = new Generator;
        $service->generate($genOptions);
    }
}

(new GeneratorTest)->run();